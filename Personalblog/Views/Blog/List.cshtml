@using Personalblog.Utils
@using Personalblog.Model.ViewModels
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model BlogListViewModel

@{
    ViewData["Title"] = "文章列表";
}

@section head
{
    <link rel="stylesheet" href="~/lib/Blog/BlogList.css"/>
}

@{
    <div class="container px-4 py-3">
        <h2 class="d-flex w-100 justify-content-between pb-2 mb-3 border-bottom">
            <div>Blog / @Model.CurrentCategory.Name</div>
            @if (Model.Posts.Count != 0)
            {
                <div>@Model.Posts.TotalItemCount.ToString() Posts</div>         
            }
        </h2>
        <div class="row">
            <!--这是文章列表-->
            <div class="col-lg-3 mb-3 treeview" id="categories">
               
            </div>
            <div class="col-lg-9">
                @if (Model.Posts.Count == 0)
                {
                    <partial name="Widgets/NoPostCard" />
                }
                @foreach (var post in Model.Posts)
                {
                    <partial name="BlogListArtice" model="post" />
                }
            </div>
        </div>
        <nav aria-label="Page navigation example">
            @Html.PagedListPager(Model.Posts, page => Url.Action(RazorHelper.GetCurrentActionName(ViewContext), new {page, categoryId = Model.CurrentCategoryId}),
        new PagedListRenderOptions {
        LiElementClasses = new[] {"page-item"},
        PageClasses = new[] {"page-link"},
        UlElementClasses = new[] {"pagination justify-content-center"}
        })
        </nav>
    </div>
}
@section bottom {
    <script type="text/javascript">document.write("<scr"+"ipt src=\"/js/bootstrap-treeview.js\"></sc"+"ript>")
    </script>
    <script src="~/lib/Blog/boldList.js"></script>
    <script>
        const categories = '@Html.Raw(Model.CategoryNodesJson)'
        initTreeView(categories);
    </script>
}
